[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

# https://peps.python.org/pep-0621/
[project]
name = "magicgui"
description = " build GUIs from python types"
keywords = ["gui", "widgets", "type annotations"]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [{ email = "talley.lambert@gmail.com", name = "Talley Lambert" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Desktop Environment",
    "Topic :: Software Development",
    "Topic :: Software Development :: User Interfaces",
    "Topic :: Software Development :: Widget Sets",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dynamic = ["version"]
dependencies = [
    "docstring_parser>=0.7",
    "psygnal>=0.8.0",
    "qtpy>=2.4.0",
    "superqt[iconify]>=0.7.2",
    "typing_extensions>=4.6",
]

# extras
# https://peps.python.org/pep-0621/#dependencies-optional-dependencies
[project.optional-dependencies]
pyqt5 = [
    "PyQt5>=5.15.8",
    "pyqt5-qt5<=5.15.2; sys_platform == 'win32'"
]
pyqt6 = ["pyqt6>=6.4.0"]
pyside2 = ["pyside2>=5.15"]
pyside6 = ["pyside6>=6.4.0"]
tqdm = ["tqdm>=4.30.0"]
jupyter = ["ipywidgets>=8.0.0"]
image = ["pillow>=10.4"]
quantity = ["pint>=0.13.0"]

[dependency-groups]
third-party-support = [
    "annotated-types>=0.7.0",
    "attrs>=25.3.0",
    "ipykernel>=6.29.5",
    "matplotlib>=3.9.4",
    "numpy>=1.26.4",
    "pandas>=2.2.3; python_version >= '3.11'",
    "pandas>=2.1",
    "pydantic>=1.10.18",
    "toolz>=1.0.0",
]
test = [
    "magicgui[tqdm,jupyter,image,quantity]",
    { include-group = "third-party-support" },
    "pytest>=8.4.0",
    "pytest-cov >=6.1",
    "pytest-mypy-plugins>=3.1",
]
test-qt = [{ include-group = "test" }, "pytest-qt >=4.3.0"]
pyqt5 = ["magicgui[pyqt5]", { include-group = "test-qt" }]
pyqt6 = ["magicgui[pyqt6]", { include-group = "test-qt" }]
pyside2 = ["magicgui[pyside2]", { include-group = "test-qt" }]
pyside6 = ["magicgui[pyside6]", { include-group = "test-qt" }]
dev = [
    { include-group = "test" },
    "ruff>=0.8.3",
    "ipython>=8.18.0",
    "mypy>=1.13.0",
    "pdbpp>=0.11.6; sys_platform != 'win32'",
    "pre-commit-uv>=4",
    "pyqt6>=6.8.0",
    "rich>=13.9.4",
]
docs = [
    "mkdocs >=1.5.3",
    "mkdocs-material ~=9.5",
    "mkdocstrings ==0.26.1",
    "mkdocstrings-python ==1.11.1",
    "griffe ==1.2.0",
    "mkdocs-gen-files ==0.5.0",
    "mkdocs-literate-nav ==0.6.1",
    "mkdocs-spellcheck[all] >=1.1.1",
    "mkdocs-gallery ==0.10.3",
    "qtgallery ==0.0.2",
    # extras for all the widgets
    "napari ==0.5.3",
    "pyqt6 >=6.8.0",
    "pint >=0.13.0",
    "matplotlib >=3.9.4",
    "ipywidgets >=8.0.0",
    "ipykernel>=6.29.5",
]

[tool.uv.sources]
magicgui = { workspace = true }


[project.urls]
homepage = "https://github.com/pyapp-kit/magicgui"
repository = "https://github.com/pyapp-kit/magicgui"
changelog = "https://github.com/pyapp-kit/magicgui/blob/main/CHANGELOG.md"
issues = "https://github.com/pyapp-kit/magicgui/issues"
documentation = "https://pyapp-kit.github.io/magicgui/"


# https://docs.astral.sh/ruff
[tool.ruff]
line-length = 88
target-version = "py39"
src = ["src", "tests"]
fix = true
# unsafe-fixes = true

[tool.ruff.lint]
pydocstyle = { convention = "numpy" }
select = [
    "E",    # style errors
    "F",    # flakes
    "W",    # warnings
    "D",    # pydocstyle
    "D417", # Missing argument descriptions in Docstrings
    "I",    # isort
    "UP",   # pyupgrade
    "C4",   # flake8-comprehensions
    "B",    # flake8-bugbear
    "A001", # flake8-builtins
    "TC",   # type checking
    "TID",  # tidy imports
    "RUF",  # ruff-specific rules
]
ignore = [
    "D401", # First line should be in imperative mood
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "S", "E501"]
"tests/test_util.py" = ["D", "S", "E501", "UP006"]
"docs/*.py" = ["B"]
"docs/examples/*.py" = ["D", "B", "E501"]
"src/magicgui/widgets/_image/*.py" = ["D"]

# https://docs.astral.sh/ruff/formatter/
[tool.ruff.format]
docstring-code-format = true

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["--color=yes"]
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore:Failed to disconnect::pytestqt",
    "ignore::DeprecationWarning:tqdm",
    "ignore::DeprecationWarning:docstring_parser",
    "ignore:distutils Version classes are deprecated:DeprecationWarning",
    "ignore:Jupyter is migrating:DeprecationWarning",
    "ignore:The `ipykernel.comm.Comm` class has been deprecated",
    "ignore:.*read_binary is deprecated:",
]

# https://mypy.readthedocs.io/en/stable/config_file.html
[tool.mypy]
files = "src/**/*.py"
strict = true
disallow_any_generics = false
disallow_subclassing_any = false
show_error_codes = true
pretty = true

[[tool.mypy.overrides]]
module = [
    "_pytest.*",
    ".docs/",
    "magicgui.widgets._image.*",
    "magicgui.backends.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = ["ipywidgets.*", "toolz.*"]
ignore_missing_imports = true


# https://coverage.readthedocs.io/en/6.4/config.html
[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError",
    "except ImportError*",
    "raise NotImplementedError()",
    "pass",
    "\\.\\.\\.",
]
omit = [
    "**/magicgui/events.py",
    "**/magicgui/widgets/_image/_mpl_image.py",
    "**/magicgui/widgets/_bases/*",
    "tests/*",
    "docs/*",
]
[tool.coverage.run]
source = ["magicgui"]

# https://github.com/mgedmin/check-manifest#configuration
[tool.check-manifest]
ignore = [
    ".pre-commit-config.yaml",
    "tests/**/*",
    ".github_changelog_generator",
    "codecov.yml",
    ".ruff_cache/**/*",
]

[tool.typos.files]
extend-exclude = ["CHANGELOG.md"]

[tool.typos.default]
extend-ignore-identifiers-re = []
