name: tests

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} (${{ matrix.python-version }}) ${{ matrix.backend }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        platform: [ubuntu-latest, macos-latest, windows-2022]
        backend: [pyqt5, pyside2]
        include:
          # until pyside2 is available for 3.10
          - python-version: "3.10"
            platform: ubuntu-latest
            backend: pyqt5
          - python-version: "3.10"
            platform: macos-latest
            backend: pyqt5
          - python-version: "3.10"
            platform: windows-2022
            backend: pyqt5
          - python-version: "3.10"
            platform: ubuntu-latest
            backend: pyqt6
          - python-version: "3.10"
            platform: ubuntu-latest
            backend: pyside6
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: tlambert03/setup-qt-libs@v1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools tox tox-gh-actions

      - name: Test with tox
        uses: GabrielBB/xvfb-action@v1
        with:
          run: python -m tox
        env:
          PLATFORM: ${{ matrix.platform }}
          BACKEND: ${{ matrix.backend }}

      - name: Coverage
        if: runner.os == 'Linux'
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  test_napari:
    name: napari tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: tlambert03/setup-qt-libs@v1
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[testing]
          python -m pip install git+https://github.com/napari/napari.git#egg=napari[pyqt5]
          wget https://raw.githubusercontent.com/napari/napari/main/napari/utils/_tests/test_magicgui.py
          # remove napari marker
          sed '/@pytest.mark.sync_only/d' test_magicgui.py > test_napari.py

      - name: Test napari magicgui
        uses: GabrielBB/xvfb-action@v1
        with:
          run: pytest test_napari.py -v --color=yes


  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'napari/magicgui' && contains(github.ref, 'tags') }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U setuptools setuptools_scm wheel twine build
      - name: Build
        run: |
          git tag
          python -m build
          twine check dist/*
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          body_path: ${{ github.workspace }}/CHANGELOG.md
      - name: Publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_API_KEY }}
        run: twine upload dist/*
